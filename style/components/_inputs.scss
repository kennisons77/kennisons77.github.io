.input{

	// General
	$error-color: red !default;

	// Float Label Input
	$label-size: 1em !default;
	$label-focus-color: $saveup-blue !default;
	$label-focus-size: 0.8em !default;
	$label-top-position: -1.5em !default;

	// Radio Button
	$radio-color: $dark-grey-font-color !default;
	$radio-color-active: $action-color !default;
	$radio-button-size: 18px !default;
	$radio-button-border: 2px !default;
	$radio-button-margin: 2px !default;

	// Switch
	$switch-size: 1em !default;
	$switch-background: grey !default;
	$switch-lever-background: darken(white, 15%) !default;
	$switch-lever-active-background: $action-color !default;

	// Checkbox
	$checkbox-color: $dark-grey-font-color !default;
	$checkbox-color-active: $action-color !default;
	$checkbox-button-size: 18px !default;
	$checkbox-button-border: 2px !default;
	$checkbox-button-margin: 2px !default;

	// Counter
	$counter-font-size: 0.7em !default;

	&-container{

		margin: 1em auto 1em auto;
		position: relative;
		display: inline-block;
		width: 100%;

		&.compact{
			margin: $small-spacing auto;

			input{
				margin-bottom: 0;
			}
		}

		input[type="checkbox"], input[type="radio"]{
			@extend %visuallyhidden;

			+ label{

				transition: all 300ms $base-timing;
				margin-bottom: 0;

				&:before, &:after{

					top: 0;
					left: 0;
					margin: 2px;
					content: " ";
					position: absolute;
					transition: inherit;
				}
			}
		}

		// Checkbox
		input[type="checkbox"]{

			+ label{

				padding-left: $checkbox-button-size * 1.5;

				&:before, &:after{
					@include size($checkbox-button-size);
					border: $checkbox-button-border solid $checkbox-color;
					background: transparent;
				}

				&:after{
					@include transform(rotate(0deg));
					top: 1px;
					left: 6px;
					width: 6px;
					height: 13px;
					font-size: 0.5em;
					border-top: none;
					transition: inherit;
					border-left: none;
					border-color: transparent;
				}
			}

			&:checked{

				+ label{

					&:after{
						border-color: white;
						@include transform(rotate(45deg));
					}

					&:before{
						background: $checkbox-color-active;
						border-color: $checkbox-color-active;
					}
				}
			}
		}

		// Radio Button
		input[type="radio"]{

			& + label{
				position: relative;
				padding-left: $radio-button-size * 1.5;

				&:before, &:after{
					@include size($radio-button-size);

					border: $radio-button-border solid $radio-color;
					transition: inherit;
					border-radius: 50%;
				}

				&:after{
			    @include transform(scale(0));
				}
			}

			&:checked{

				& + label{

					&:after{
						@include transform(scale(1.02));
						border: $radio-button-border solid $radio-color-active;;
    				background-color: $radio-color-active;
					}

					&:before{
						border-color: $radio-color-active;
					}
				}
			}

			&.radio-gap:checked{
				& + label{
					&:after{
						@include transform(scale(0.6));
					}
				}
			}
		}

		// Switch Component
		.switch{

			input{

				@extend %visuallyhidden;

				&:checked{

					& + span{
						background: lighten($switch-lever-active-background, 10%);

						&:before{
							left: $switch-size * 1.25;
							background: $switch-lever-active-background;
						}
					}
				}
			}

			&-lever{

				width: $switch-size * 2.5;
				height: $switch-size;
				margin: 0 $switch-size / 2;
				display: inline-block;
				position: relative;
				background: $switch-background;
				transition: all $base-duration $base-timing;
				border-radius: $switch-size;
				vertical-align: text-top;

				&:before{

					@include size($switch-size * 1.5);

					top: -$switch-size * 0.25;
					left: -$switch-size * 0.25;
					content: " ";
					display: inline-block;
					position: absolute;
					background: $switch-lever-background;
					box-shadow: 0 1px 3px 1px rgba(0,0,0,0.4);
					transition: inherit;
					border-radius: 50%;
				}
			}
		}

		input[type=number]::-webkit-inner-spin-button, 
		input[type=number]::-webkit-outer-spin-button { 
		  -webkit-appearance: none; 
		  margin: 0; 
		}

		input[type=number] {
		  -moz-appearance: textfield;
		}

		// Float Label Inputs
		#{$all-text-inputs}{

			margin: 0;
			padding-left: 0;
			padding-right: 0;
			
			& + label{
				top: 0;
				left: 0;
				cursor: text;
				padding: 0.3em 0;
				position: absolute;
				font-size: $label-size;
				font-weight: normal;
				transition: all $base-duration $base-timing;
			}

			&:focus + label, &.float-label + label, &[placeholder] ~ label{
				margin-top: -1.5em;
				font-size: $label-focus-size;
			}

			&:focus + label	{
				color: $label-focus-color;
			}

			&[required]{

				~ label{
					
					&:after{
						content: " *";
					}
				}

				&:focus ~ label{
					
					&:after{
						color: $error-color;
					}
				}
			}

			&.error{

				border-bottom-color: $error-color;

				~ span.input-counter, ~ span.input-error, ~ label{
					color: $error-color;
				}

				~ span.input-error{
					display: block;
				}
			}
		}

		svg{
			fill: $dark-grey-font-color;
			height: 2.2em;
			position: absolute;

			&.close{
				left: 100%;
				margin-left: - $small-icon-size;

				~ input, ~ label{
					padding-right: $small-icon-size !important;
				}
			}

			~ input, ~ label{
				padding-left: $small-icon-size !important;
			}
		}
	}

	&-error, &-hint, &-counter{
		position: absolute;
		font-size: $counter-font-size;
		padding-right: $small-spacing;
	}

	&-error{
		display: none;
	}

	&-counter{
		@include transform(translateX(-100%));
		left: 100%;

		> *{
			vertical-align: middle;
		}
	}
}